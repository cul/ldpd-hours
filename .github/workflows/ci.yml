name: CI

on:
  push:
    branches: [ '*' ]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2.2']
        node: ['14', '16']
    env:
      RAILS_ENV: test
      NOKOGIRI_USE_SYSTEM_LIBRARIES: true

    steps:
      - uses: actions/checkout@v2
      - name: Install libxslt for nokogiri gem (required for version < 1.11)
        run: sudo apt-get install -y libxml2-dev libxslt-dev
      - name: Add --no-document option to .gemrc file to speed up bundle install
        run: "echo 'gem: --no-document' > ~/.gemrc"
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: npm install -g yarn
      - run: yarn install
      - run: cp config/database.template.yml config/database.yml
      - run: cp config/secrets.template.yml config/secrets.yml
      - run: cp config/wifi_density.template.yml config/wifi_density.yml
      - run: RAILS_ENV=test bundle exec rake db:schema:load --trace
      - run: RAILS_ENV=test bundle exec rake db:test:prepare
      - name: Run tests
        run: bundle exec rspec spec
      - name: Send coverage file to Coveralls for analysis
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage/lcov.info
          flag-name: run-${{ matrix.test_number }}
          parallel: true

  # Since Coveralls runs for each test in the matrix, we need to run those coveralls tests with
  # `parallel: true` and then run `parallel-finished: true` below, after everything else is done.
  finish:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
